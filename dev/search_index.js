var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DuckDBServer","category":"page"},{"location":"#DuckDBServer","page":"Home","title":"DuckDBServer","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DuckDBServer.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DuckDBServer]","category":"page"},{"location":"#Base.convert-Tuple{Type{DataFrames.DataFrame}, HTTP.Messages.Response}","page":"Home","title":"Base.convert","text":"convert(::Type{DataFrame}, resp::HTTP.Messages.Response)\n\nConverts an HTTP.Messages.Response from a DuckDB httpserver JSON response into a DataFrame.\n\nArguments\n\nresp::HTTP.Messages.Response - The HTTP response from a DuckDB httpserver.\n\nReturns\n\nDataFrame - converted response\n\n\n\n\n\n","category":"method"},{"location":"#DuckDBServer.execute-Tuple{String, String}","page":"Home","title":"DuckDBServer.execute","text":"execute(host, body; format = \"JSONCompact\") -> DataFrame\n\nSends an HTTP POST request to the specified host with the given body and parses the response into a DataFrame.\n\nArguments\n\nhost::String - The httpserver endpoint. \nbody::String - The query to execute against the DuckDB database.\nformat::String : The response format, passed as a query parameter (default = \"JSONCompact\").\n\nReturns\n\nA DataFrame returning the query results\n\nExample\n\njulia> execute(\"http://10.0.0.121:8080/\", \"SELECT person_id, year_of_birth FROM dbt_synthea_dev.person LIMIT 3;\")\n3×2 DataFrame\n Row │ person_id  year_of_birth \n     │ Int64      Int64         \n─────┼──────────────────────────\n   1 │         1           1955\n   2 │         2           1940\n   3 │         3           1986\n\n\n\n\n\n","category":"method"}]
}
